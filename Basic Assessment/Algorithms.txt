An algorithm is a sequential procedure to solve a particular problem.

Properties of an algorithm : 
- An algorithm has a finite number of steps.
- An algorithm should be robust. Less time and space complexity.

Why we need algorithms : 
- To get a clear overview of the particular problem.

Q. Write an algorithm to find all the prime numbers in the range {2,...,n}, where n is the nth element.

    S1. Start
    S2. input(n)
    S3. for(i = 3; i <= n; i = i+2)
    S4.     for(j = 3; j <= sqrt(i); j = j+2)
    S5.         if(i % j == 0)
    S6.             count++
    S7.             break
    S8.     if(count == 0)? print(i)

Q. Write a ROBUST algorithm to find all the prime numbers in the range {2,...,n}, where n is the nth element.
Q. Consider an infix algebric expression. Write an algorithm to find its equivalent postfix expression, hence evaluate the expression.
Q. Consider an infix algebric expression. Write an algorithm to create a unique binary tree. 
Q. Consider an postfix algebric expression. Write an algorithm to create a unique binary tree.
Q. Given a list of numbers, design an algorithm to create a max heap.
Q. Given a list of numbers, design an algorithm to create a min heap.
Q. Given a list of numbers, design an algorithm to sort the list in ascending order using a max heap.
Q. Given a list of numbers, design an algorithm to sort the list in descending order using a min heap.
